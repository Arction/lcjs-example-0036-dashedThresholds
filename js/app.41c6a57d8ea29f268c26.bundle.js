(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const s=a(475),{lightningChart:r,Themes:n,AxisTickStrategies:i,DashedLine:o,SolidFill:l,StipplePatterns:h}=s,d=r().ChartXY({}).setTitle("Machine temperatures"),m=d.getTheme().examples;if(!m)throw new Error("Unofficial theme used");const c=d.getDefaultAxisX().setTickStrategy(i.Time),p=d.getDefaultAxisY().setTitle("Temperature °C").setTickStrategy(i.Numeric,(e=>e.setCursorFormatter((e=>`${e.toFixed(1)} °C`))));Promise.all([fetch(document.head.baseURI+"examples/assets/0036/temperature.json").then((e=>e.json())),fetch(document.head.baseURI+"examples/assets/0036/temperature2.json").then((e=>e.json()))]).then((([e,t])=>{const a=d.addLineSeries({dataPattern:{pattern:"ProgressiveX"}}).setName("Machine 1 temperature").add(e),s=d.addLineSeries({dataPattern:{pattern:"ProgressiveX"}}).setName("Machine 2 temperature").add(t);p.addConstantLine(!0).setValue(120).setStrokeStyle(new o({thickness:4,fillStyle:new l({color:m.badGoodColorPalette[0]}),pattern:h.Dashed,patternScale:4})).setMouseInteractions(!1),c.setInterval({start:Math.min(a.getXMin(),s.getXMin())-1e3,end:Math.max(a.getXMax(),s.getXMax())+1e3}),p.setInterval({start:0,end:Math.max(a.getYMax(),s.getYMax())+20})}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);